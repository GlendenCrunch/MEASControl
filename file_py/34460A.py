#!/usr/bin/python3-32
# -*- coding: utf-8 -*-
Supportfunc('resetdmm')
if self.vardict_boo['dcv_var'].get() == 1 or self.vardict_boo['acv_var'].get() == 1 or self.vardict_boo['f_var'].get() == 1 or self.vardict_boo['r2_var'].get() == 1:
    Supportfunc('message-Подключите провода к клеммам измерения напряжения, частоты или сопротивления')
elif self.vardict_boo['aci_var'].get() == 1:
    Supportfunc('message-Подключите провода для измерения тока')
if self.vardict_boo['dcv_var'].get() == 1:
    Call('dcv', '100 mV', 'CONF:VOLT:DC 0.1', 'dcv_1', '', 'DET:BAND 20', 3, 0.0155)
    Call('dcv', '-100 mV', 'CONF:VOLT:DC 0.1', 'dcv_2', '', 'DET:BAND 20', 3, 0.0155)
    Call('dcv', '1 V', 'CONF:VOLT:DC 1', 'dcv_3', '', 'DET:BAND 20', 3, 0.00009)
    Call('dcv', '-1 V', 'CONF:VOLT:DC 1', 'dcv_4', '', 'DET:BAND 20', 3, 0.00009)
    Call('dcv', '4 V', 'CONF:VOLT:DC 10', 'dcv_5', '', 'DET:BAND 20', 3, 0.00035)
    Call('dcv', '10 V', 'CONF:VOLT:DC 10', 'dcv_6', '', 'DET:BAND 20', 3, 0.0008)
    Call('dcv', '-10 V', 'CONF:VOLT:DC 10', 'dcv_7', '', 'DET:BAND 20', 3, 0.0008)
    Call('dcv', '100 V', 'CONF:VOLT:DC 100', 'dcv_8', '', 'DET:BAND 20', 4, 0.0091)
    Call('dcv', '-100 V', 'CONF:VOLT:DC 100', 'dcv_9', '', 'DET:BAND 20', 4, 0.0091)
    Call('dcv', '1000 V', 'CONF:VOLT:DC 1000', 'dcv_10', '', 'DET:BAND 20', 8, 0.095)
    Call('dcv', '-500 V', 'CONF:VOLT:DC 1000', 'dcv_11', '', 'DET:BAND 20', 8, 0.0525)
if self.vardict_boo['acv_var'].get() == 1:
    Call('acv', '100 mV, 1 kHz', 'CONF:VOLT:AC 0.1', 'acv_1', '', 'DET:BAND 20', 5, 0.12)
    Call('acv', '100 mV, 50 kHz', 'CONF:VOLT:AC 0.1', 'acv_2', '', 'DET:BAND 20', 5, 0.2)
    Call('acv', '100 mV, 300 kHz', 'CONF:VOLT:AC 0.1', 'acv_3', '', 'DET:BAND 20', 5, 4.5)
    Call('acv', '1 V, 1 kHz', 'CONF:VOLT:AC 1', 'acv_4', '', 'DET:BAND 20', 5, 0.0012)
    Call('acv', '1 V, 50 kHz', 'CONF:VOLT:AC 1', 'acv_5', '', 'DET:BAND 20', 5, 0.002)
    Call('acv', '1 V, 300 kHz', 'CONF:VOLT:AC 1', 'acv_6', '', 'DET:BAND 20', 5, 0.045)
    Call('acv', '30 mV, 1 kHz', 'CONF:VOLT:AC 10', 'acv_7', '', 'DET:BAND 200', 8, 0.003)
    Call('acv', '1 V, 1 kHz', 'CONF:VOLT:AC 10', 'acv_8', '', 'DET:BAND 20', 5, 0.0039)
    Call('acv', '10 V, 10 Hz', 'CONF:VOLT:AC 10', 'acv_9', '', 'DET:BAND 3', 5, 0.012)
    Call('acv', '10 V, 100 Hz', 'CONF:VOLT:AC 10', 'acv_10', '', 'DET:BAND 20', 5, 0.012)
    Call('acv', '10 V, 20 kHz', 'CONF:VOLT:AC 10', 'acv_11', '', 'DET:BAND 20', 5, 0.012)
    Call('acv', '10 V, 50 kHz', 'CONF:VOLT:AC 10', 'acv_12', '', 'DET:BAND 20', 5, 0.02)
    Call('acv', '10 V, 100 kHz', 'CONF:VOLT:AC 10', 'acv_13', '', 'DET:BAND 20', 5, 0.071)
    Call('acv', '100 V, 1 kHz', 'CONF:VOLT:AC 100', 'acv_15', '', 'DET:BAND 20', 5, 0.12)
    Call('acv', '750 V, 1 kHz', 'CONF:VOLT:AC 750', 'acv_18', '', 'DET:BAND 20', 5, 0.9)
    if self.b1[1] == '5522A':
        Call('acv', '10 V, 300 kHz', 'CONF:VOLT:AC 10', 'acv_14', '', 'DET:BAND 20', 5, 0.45)
        Call('acv', '100 V, 50 kHz', 'CONF:VOLT:AC 100', 'acv_16', '', 'DET:BAND 20', 5, 0.2)
        Call('acv', '70 V, 300 kHz', 'CONF:VOLT:AC 100', 'acv_17', '', 'DET:BAND 20', 5, 3.3)
        Call('acv', '210 V, 50 kHz', 'CONF:VOLT:AC 750', 'acv_19', '', 'DET:BAND 20', 5, 0.69)
        Call('acv', '70 V, 300 kHz', 'CONF:VOLT:AC 750', 'acv_20', '', 'DET:BAND 20', 5, 6.6)
if self.vardict_boo['f_var'].get() == 1:
    Call('fr', '0.1 V, 10 Hz', 'CONF:FREQ 10 Hz', 'f_1', '', 'DET:BAND 20', 5, 0.003)
    Call('fr', '0.01 V, 300 kHz', 'CONF:FREQ 300 kHz', 'f_2', '', 'DET:BAND 20', 5, 0.36)
if self.vardict_boo['r2_var'].get() == 1:
    Call('res', '1 MOHM', 'CONF:RES 1 MOHM', 'r2_1', '', 'DET:BAND 20', 5, 0.00015)
    Call('res', '10 MOHM', 'CONF:RES 10 MOHM', 'r2_2', '', 'DET:BAND 20', 5, 0.0041)
    Call('res', '100 MOHM', 'CONF:RES 100 MOHM', 'r2_3', '', 'DET:BAND 20', 8, 0.081)
if self.vardict_boo['r4_var'].get() == 1:
    Supportfunc('message-Подключите провода по четырехпроводной схеме\n для измерения сопротивления')
    Call('res', '100 OHM', 'CONF:FRES 100', 'r4_1', '', 'DET:BAND 20', 5, 0.021)
    Call('res', '1 kOHM', 'CONF:FRES 1 KOHM', 'r4_2', '', 'DET:BAND 20', 5, 0.00015)
    Call('res', '10 kOHM', 'CONF:FRES 10 KOHM', 'r4_3', '', 'DET:BAND 20', 5, 0.0015)
    Call('res', '100 kOHM', 'CONF:FRES 100 KOHM', 'r4_4', '', 'DET:BAND 20', 5, 0.015)
if self.vardict_boo['dci_var'].get() == 1:
    Supportfunc('message-Подключите провода\n для измерения тока до 3 Ампер')
    Call('dci', '100 uA', 'CONF:CURR:DC 0.0001', 'dci_1', '', 'DET:BAND 20', 5, 0.075)
    Call('dci', '1 mA', 'CONF:CURR:DC 0.001', 'dci_2', '', 'DET:BAND 20', 5, 0.00056)
    Call('dci', '10 mA', 'CONF:CURR:DC 0.01', 'dci_3', '', 'DET:BAND 20', 5, 0.007)
    Call('dci', '100 mA', 'CONF:CURR:DC 0.1', 'dci_4', '', 'DET:BAND 20', 5, 0.055)
    Call('dci', '1 A', 'CONF:CURR:DC 1', 'dci_5', '', 'DET:BAND 20', 5, 0.0011)
    Call('dci', '2 A', 'CONF:CURR:DC 3', 'dci_6', '', 'DET:BAND 20', 5, 0.0046)
if self.vardict_boo['aci_var'].get() == 1:
    Call('aci', '100 uA, 1 kHz', 'CONF:CURR:AC 0.0001', 'aci_1', '', 'DET:BAND 20', 5, 0.14)
    Call('aci', '100 uA, 5 kHz', 'CONF:CURR:AC 0.0001', 'aci_2', '', 'DET:BAND 20', 5, 0.14)
    Call('aci', '1 mA, 1 kHz', 'CONF:CURR:AC 0.001', 'aci_3', '', 'DET:BAND 20', 5, 0.0014)
    Call('aci', '1 mA, 5 kHz', 'CONF:CURR:AC 0.001', 'aci_4', '', 'DET:BAND 20', 5, 0.0014)
    Call('aci', '100 uA, 1 kHz', 'CONF:CURR:AC 0.01', 'aci_5', '', 'DET:BAND 20', 5, 4.1)
    Call('aci', '1 mA, 1 kHz', 'CONF:CURR:AC 0.01', 'aci_6', '', 'DET:BAND 20', 5, 0.005)
    Call('aci', '10 mA, 1 kHz', 'CONF:CURR:AC 0.01', 'aci_7', '', 'DET:BAND 20', 5, 0.014)
    Call('aci', '10 mA, 5 kHz', 'CONF:CURR:AC 0.01', 'aci_8', '', 'DET:BAND 20', 5, 0.014)
    Call('aci', '10 mA, 10 Hz', 'CONF:CURR:AC 0.1', 'aci_9', '', 'DET:BAND 3', 8, 0.14)
    Call('aci', '100 mA, 1 kHz', 'CONF:CURR:AC 0.1', 'aci_10', '', 'DET:BAND 20', 5, 0.14)
    Call('aci', '100 mA, 5 kHz', 'CONF:CURR:AC 0.1', 'aci_11', '', 'DET:BAND 20', 5, 0.14)
    Call('aci', '1 A, 1 kHz', 'CONF:CURR:AC 1', 'aci_12', '', 'DET:BAND 20', 5, 0.0014)
    Call('aci', '1 A, 5 kHz', 'CONF:CURR:AC 1', 'aci_13', '', 'DET:BAND 20', 5, 0.0014)
    Call('aci', '2 A, 1 kHz', 'CONF:CURR:AC 3', 'aci_14', '', 'DET:BAND 20', 5, 0.0058)
    Call('aci', '2 A, 5 kHz', 'CONF:CURR:AC 3', 'aci_15', '', 'DET:BAND 20', 5, 0.0058)

Supportfunc('message-Калибровка завершена')
Clear_merge()
Supportfunc('resetdmm')
