#!/usr/bin/python3-32
# -*- coding: utf-8 -*-
Reset()
if self.vardict_boo['dcv_var'].get() == 1 or self.vardict_boo['acv_var'].get() == 1 or self.vardict_boo['f_var'].get() == 1 or self.vardict_boo['r2_var'].get() == 1:
    Message('Подключите провода к клеммам измерения напряжения, частоты или сопротивления')
elif self.vardict_boo['aci_var'].get() == 1:
    Message('Подключите провода для измерения тока')
if self.vardict_boo['dcv_var'].get() == 1:
    Call('dcv', '10 mV', 'CONF:VOLT:DC 0.1', 'dcv_1', '', 'DET:BAND 20', 3, 0.004)
    Call('dcv', '50 mV', 'CONF:VOLT:DC 0.1', 'dcv_2', '', 'DET:BAND 20', 3, 0.006)
    Call('dcv', '100 mV', 'CONF:VOLT:DC 0.1', 'dcv_3', '', 'DET:BAND 20', 3, 0.0085)
    Call('dcv', '-100 mV', 'CONF:VOLT:DC 0.1', 'dcv_4', '', 'DET:BAND 20', 3, 0.0085)
    Call('dcv', '0.1 V', 'CONF:VOLT:DC 1', 'dcv_5', '', 'DET:BAND 20', 3, 0.0000011)
    Call('dcv', '0.5 V', 'CONF:VOLT:DC 1', 'dcv_6', '', 'DET:BAND 20', 3, 0.000027)
    Call('dcv', '1 V', 'CONF:VOLT:DC 1', 'dcv_7', '', 'DET:BAND 20', 3, 0.000047)
    Call('dcv', '-1 V', 'CONF:VOLT:DC 1', 'dcv_8', '', 'DET:BAND 20', 3, 0.000047)
    Call('dcv', '1 V', 'CONF:VOLT:DC 10', 'dcv_9', '', 'DET:BAND 20', 3, 0.000085)
    Call('dcv', '5 V', 'CONF:VOLT:DC 10', 'dcv_10', '', 'DET:BAND 20', 3, 0.000225)
    Call('dcv', '10 V', 'CONF:VOLT:DC 10', 'dcv_11', '', 'DET:BAND 20', 3, 0.0004)
    Call('dcv', '-10 V', 'CONF:VOLT:DC 10', 'dcv_12', '', 'DET:BAND 20', 3, 0.0004)
    Call('dcv', '10 V', 'CONF:VOLT:DC 100', 'dcv_13', '', 'DET:BAND 20', 3, 0.00045)
    Call('dcv', '50 V', 'CONF:VOLT:DC 100', 'dcv_14', '', 'DET:BAND 20', 4, 0.00285)
    Call('dcv', '100 V', 'CONF:VOLT:DC 100', 'dcv_15', '', 'DET:BAND 20', 4, 0.0051)
    Call('dcv', '-100 V', 'CONF:VOLT:DC 100', 'dcv_16', '', 'DET:BAND 20', 4, 0.0051)
    Call('dcv', '100 V', 'CONF:VOLT:DC 1000', 'dcv_17', '', 'DET:BAND 20', 4, 0.0145)
    Call('dcv', '500 V', 'CONF:VOLT:DC 1000', 'dcv_18', '', 'DET:BAND 20', 4, 0.0325)
    Call('dcv', '1000 V', 'CONF:VOLT:DC 1000', 'dcv_19', '', 'DET:BAND 20', 4, 0.055)
    Call('dcv', '-1000 V', 'CONF:VOLT:DC 1000', 'dcv_20', '', 'DET:BAND 20', 8, 0.055)
if self.vardict_boo['acv_var'].get() == 1:
    Call('acv', '10 mV, 10 Hz', 'CONF:VOLT:AC 0.1', 'acv_1', '', 'DET:BAND 3', 4, 0.075)
    Call('acv', '10 mV, 1 kHz', 'CONF:VOLT:AC 0.1', 'acv_2', '', 'DET:BAND 20', 4, 0.046)
    Call('acv', '10 mV, 50 kHz', 'CONF:VOLT:AC 0.1', 'acv_3', '', 'DET:BAND 20', 4, 0.062)
    Call('acv', '10 mV, 100 kHz', 'CONF:VOLT:AC 0.1', 'acv_4', '', 'DET:BAND 20', 4, 0.14)
    Call('acv', '50 mV, 10 Hz', 'CONF:VOLT:AC 0.1', 'acv_5', '', 'DET:BAND 3', 4, 0.215)
    Call('acv', '50 mV, 1 kHz', 'CONF:VOLT:AC 0.1', 'acv_6', '', 'DET:BAND 20', 4, 0.07)
    Call('acv', '50 mV, 50 kHz', 'CONF:VOLT:AC 0.1', 'acv_7', '', 'DET:BAND 20', 4, 0.11)
    Call('acv', '50 mV, 100 kHz', 'CONF:VOLT:AC 0.1', 'acv_8', '', 'DET:BAND 20', 4, 0.38)
    Call('acv', '50 mV, 300 kHz', 'CONF:VOLT:AC 0.1', 'acv_9', '', 'DET:BAND 20', 4, 2.5)
    Call('acv', '100 mV, 10 Hz', 'CONF:VOLT:AC 0.1', 'acv_10', '', 'DET:BAND 3', 4, 0.39)
    Call('acv', '100 mV, 1 kHz', 'CONF:VOLT:AC 0.1', 'acv_11', '', 'DET:BAND 20', 4, 0.1)
    Call('acv', '100 mV, 50 kHz', 'CONF:VOLT:AC 0.1', 'acv_12', '', 'DET:BAND 20', 4, 0.17)
    Call('acv', '100 mV, 100 kHz', 'CONF:VOLT:AC 0.1', 'acv_13', '', 'DET:BAND 20', 4, 0.68)
    Call('acv', '100 mV, 300 kHz', 'CONF:VOLT:AC 0.1', 'acv_14', '', 'DET:BAND 20', 4, 4.5)
    Call('acv', '100 mV, 10 Hz', 'CONF:VOLT:AC 1', 'acv_15', '', 'DET:BAND 3', 4, 0.65)
    Call('acv', '100 mV, 1 kHz', 'CONF:VOLT:AC 1', 'acv_16', '', 'DET:BAND 20', 4, 0.36)
    Call('acv', '100 mV, 50 kHz', 'CONF:VOLT:AC 1', 'acv_17', '', 'DET:BAND 20', 4, 0.62)
    Call('acv', '100 mV, 100 kHz', 'CONF:VOLT:AC 1', 'acv_18', '', 'DET:BAND 20', 4, 1.4)
    Call('acv', '100 mV, 300 kHz', 'CONF:VOLT:AC 1', 'acv_19', '', 'DET:BAND 20', 4, 9)
    Call('acv', '500 mV, 10 Hz', 'CONF:VOLT:AC 1', 'acv_20', '', 'DET:BAND 3', 4, 2.05)
    Call('acv', '500 mV, 1 kHz', 'CONF:VOLT:AC 1', 'acv_21', '', 'DET:BAND 20', 4, 0.6)
    Call('acv', '500 mV, 50 kHz', 'CONF:VOLT:AC 1', 'acv_22', '', 'DET:BAND 20', 4, 1.1)
    Call('acv', '500 mV, 100 kHz', 'CONF:VOLT:AC 1', 'acv_23', '', 'DET:BAND 20', 4, 3.8)
    Call('acv', '500 mV, 300 kHz', 'CONF:VOLT:AC 1', 'acv_24', '', 'DET:BAND 20', 4, 25)
    Call('acv', '1 V, 10 Hz', 'CONF:VOLT:AC 1', 'acv_25', '', 'DET:BAND 3', 4, 0.0038)
    Call('acv', '1 V, 1 kHz', 'CONF:VOLT:AC 1', 'acv_26', '', 'DET:BAND 20', 4, 0.0009)
    Call('acv', '1 V, 50 kHz', 'CONF:VOLT:AC 1', 'acv_27', '', 'DET:BAND 20', 4, 0.0017)
    Call('acv', '1 V, 100 kHz', 'CONF:VOLT:AC 1', 'acv_28', '', 'DET:BAND 20', 4, 0.0068)
    Call('acv', '1 V, 300 kHz', 'CONF:VOLT:AC 1', 'acv_29', '', 'DET:BAND 20', 4, 0.045)
    Call('acv', '1 V, 10 Hz', 'CONF:VOLT:AC 10', 'acv_30', '', 'DET:BAND 3', 4, 0.0065)
    Call('acv', '1 V, 1 kHz', 'CONF:VOLT:AC 10', 'acv_31', '', 'DET:BAND 20', 4, 0.0036)
    Call('acv', '1 V, 50 kHz', 'CONF:VOLT:AC 10', 'acv_32', '', 'DET:BAND 20', 4, 0.0062)
    Call('acv', '1 V, 100 kHz', 'CONF:VOLT:AC 10', 'acv_33', '', 'DET:BAND 20', 4, 0.014)
    Call('acv', '5 V, 10 Hz', 'CONF:VOLT:AC 10', 'acv_34', '', 'DET:BAND 3', 4, 0.0205)
    Call('acv', '5 V, 1 kHz', 'CONF:VOLT:AC 10', 'acv_35', '', 'DET:BAND 20', 4, 0.006)
    Call('acv', '5 V, 50 kHz', 'CONF:VOLT:AC 10', 'acv_36', '', 'DET:BAND 20', 4, 0.011)
    Call('acv', '5 V, 100 kHz', 'CONF:VOLT:AC 10', 'acv_37', '', 'DET:BAND 20', 4, 0.038)
    Call('acv', '10 V, 10 Hz', 'CONF:VOLT:AC 10', 'acv_38', '', 'DET:BAND 3', 4, 0.038)
    Call('acv', '10 V, 1 kHz', 'CONF:VOLT:AC 10', 'acv_39', '', 'DET:BAND 20', 4, 0.009)
    Call('acv', '10 V, 50 kHz', 'CONF:VOLT:AC 10', 'acv_40', '', 'DET:BAND 20', 4, 0.017)
    Call('acv', '10 V, 100 kHz', 'CONF:VOLT:AC 10', 'acv_41', '', 'DET:BAND 203', 4, 0.068)
    Call('acv', '10 V, 10 Hz', 'CONF:VOLT:AC 100', 'acv_42', '', 'DET:BAND 3', 4, 0.065)
    Call('acv', '10 V, 1 kHz', 'CONF:VOLT:AC 100', 'acv_43', '', 'DET:BAND 20', 4, 0.036)
    Call('acv', '10 V, 50 kHz', 'CONF:VOLT:AC 100', 'acv_44', '', 'DET:BAND 20', 4, 0.062)
    Call('acv', '10 V, 100 kHz', 'CONF:VOLT:AC 100', 'acv_45', '', 'DET:BAND 20', 4, 0.14)
    Call('acv', '30 V, 10 Hz', 'CONF:VOLT:AC 100', 'acv_46', '', 'DET:BAND 3', 4, 0.205)
    Call('acv', '30 V, 1 kHz', 'CONF:VOLT:AC 100', 'acv_47', '', 'DET:BAND 20', 4, 0.06)
    Call('acv', '30 V, 50 kHz', 'CONF:VOLT:AC 100', 'acv_48', '', 'DET:BAND 20', 4, 0.11)
    Call('acv', '30 V, 100 kHz', 'CONF:VOLT:AC 100', 'acv_49', '', 'DET:BAND 20', 4, 0.38)
    Call('acv', '100 V, 50 Hz', 'CONF:VOLT:AC 100', 'acv_50', '', 'DET:BAND 3', 4, 0.38)
    Call('acv', '100 V, 1 kHz', 'CONF:VOLT:AC 100', 'acv_51', '', 'DET:BAND 20', 4, 0.09)
    Call('acv', '100 V, 50 Hz', 'CONF:VOLT:AC 750', 'acv_54', '', 'DET:BAND 3', 4, 0.575)
    Call('acv', '100 V, 1 kHz', 'CONF:VOLT:AC 750', 'acv_55', '', 'DET:BAND 20', 4, 0.285)
    Call('acv', '500 V, 50 Hz', 'CONF:VOLT:AC 750', 'acv_58', '', 'DET:BAND 3', 4, 1.975)
    Call('acv', '500 V, 1 kHz', 'CONF:VOLT:AC 750', 'acv_59', '', 'DET:BAND 20', 4, 0.525)
    Call('acv', '750 V, 50 Hz', 'CONF:VOLT:AC 750', 'acv_62', '', 'DET:BAND 3', 4, 2.85)
    Call('acv', '750 V, 1 kHz', 'CONF:VOLT:AC 750', 'acv_63', '', 'DET:BAND 20', 4, 0.675)
    if self.b1[1] == '5522A':
        Call('acv', '100 V, 50 kHz', 'CONF:VOLT:AC 100', 'acv_52', '', 'DET:BAND 20', 4, 0.17)
        Call('acv', '100 V, 100 kHz', 'CONF:VOLT:AC 100', 'acv_53', '', 'DET:BAND 20', 4, 0.68)
        Call('acv', '100 V, 50 kHz', 'CONF:VOLT:AC 750', 'acv_56', '', 'DET:BAND 20', 4, 0.495)
        Call('acv', '100 V, 100 kHz', 'CONF:VOLT:AC 750', 'acv_57', '', 'DET:BAND 20', 4, 1.2)
        '''Call('acv', '500 V, 50 kHz', 'CONF:VOLT:AC 750', 'acv_60', '', 'DET:BAND 20', 4, 0.975)
        Call('acv', '500 V, 100 kHz', 'CONF:VOLT:AC 750', 'acv_61', '', 'DET:BAND 20', 4, 3.6)
        Call('acv', '750 V, 50 kHz', 'CONF:VOLT:AC 750', 'acv_64', '', 'DET:BAND 20', 4, 1.275)
        Call('acv', '750 V, 100 kHz', 'CONF:VOLT:AC 750', 'acv_65', '', 'DET:BAND 20', 4, 5.1)'''
if self.vardict_boo['f_var'].get() == 1:
    Call('fr', '0.01 V, 10 Hz', 'CONF:FREQ 100 Hz', 'f_1', '', 'DET:BAND 3', 4, 0.005)
    Call('fr', '1 V, 50 kHz', 'CONF:FREQ 100 kHz', 'f_2', '', 'DET:BAND 20', 4, 0.015)
    Call('fr', '1 V, 300 kHz', 'CONF:FREQ 300 kHz', 'f_3', '', 'DET:BAND 20', 4, 0.03)
if self.vardict_boo['r2_var'].get() == 1:
    Call('res', '1 kOHM', 'CONF:RES 10 KOHM', 'r2_1', '', 'DET:BAND 20', 4, 0.0002)
    Call('res', '5 kOHM', 'CONF:RES 10 KOHM', 'r2_2', '', 'DET:BAND 20', 4, 0.0006)
    Call('res', '10 kOHM', 'CONF:RES 10 KOHM', 'r2_3', '', 'DET:BAND 20', 4, 0.0011)
    Call('res', '10 kOHM', 'CONF:RES 100 KOHM', 'r2_4', '', 'DET:BAND 20', 4, 0.002)
    Call('res', '50 kOHM', 'CONF:RES 100 KOHM', 'r2_5', '', 'DET:BAND 20', 4, 0.006)
    Call('res', '100 kOHM', 'CONF:RES 100 KOHM', 'r2_6', '', 'DET:BAND 20', 4, 0.011)
    Call('res', '0.1 MOHM', 'CONF:RES 1 MOHM', 'r2_7', '', 'DET:BAND 20', 4, 0.00002)
    Call('res', '0.5 MOHM', 'CONF:RES 1 MOHM', 'r2_8', '', 'DET:BAND 20', 4, 0.00006)
    Call('res', '1 MOHM', 'CONF:RES 1 MOHM', 'r2_9', '', 'DET:BAND 20', 4, 0.00011)
    Call('res', '1 MOHM', 'CONF:RES 10 MOHM', 'r2_10', '', 'DET:BAND 20', 4, 0.0005)
    Call('res', '5 MOHM', 'CONF:RES 10 MOHM', 'r2_11', '', 'DET:BAND 20', 4, 0.0021)
    Call('res', '10 MOHM', 'CONF:RES 10 MOHM', 'r2_12', '', 'DET:BAND 20', 4, 0.0041)
    Call('res', '10 MOHM', 'CONF:RES 100 MOHM', 'r2_13', '', 'DET:BAND 20', 4, 0.09)
    Call('res', '50 MOHM', 'CONF:RES 100 MOHM', 'r2_14', '', 'DET:BAND 20', 4, 0.41)
    Call('res', '100 MOHM', 'CONF:RES 100 MOHM', 'r2_15', '', 'DET:BAND 20', 4, 0.81)
if self.vardict_boo['r4_var'].get() == 1:
    Message('Подключите провода по четырехпроводной схеме\n для измерения сопротивления')
    Call('res', '10 OHM', 'CONF:FRES 100', 'r4_1', '', 'DET:BAND 20', 4, 0.005)
    Call('res', '50 OHM', 'CONF:FRES 100', 'r4_2', '', 'DET:BAND 20', 4, 0.009)
    Call('res', '100 OHM', 'CONF:FRES 100', 'r4_3', '', 'DET:BAND 20', 4, 0.014)
    Call('res', '0.1 kOHM', 'CONF:FRES 1 KOHM', 'r4_4', '', 'DET:BAND 20', 4, 0.00002)
    Call('res', '0.5 kOHM', 'CONF:FRES 1 KOHM', 'r4_5', '', 'DET:BAND 20', 4, 0.00006)
    Call('res', '1 kOHM', 'CONF:FRES 1 KOHM', 'r4_6', '', 'DET:BAND 20', 4, 0.00011)
if self.vardict_boo['dci_var'].get() == 1:
    Message('Подключите провода для измерения тока')
    Call('dci', '1 mA', 'CONF:CURR:DC 0.01', 'dci_1', '', 'DET:BAND 20', 4, 0.0025)
    Call('dci', '5 mA', 'CONF:CURR:DC 0.01', 'dci_2', '', 'DET:BAND 20', 4, 0.0045)
    Call('dci', '10 mA', 'CONF:CURR:DC 0.01', 'dci_3', '', 'DET:BAND 20', 4, 0.007)
    Call('dci', '10 mA', 'CONF:CURR:DC 0.1', 'dci_4', '', 'DET:BAND 20', 4, 0.01)
    Call('dci', '50 mA', 'CONF:CURR:DC 0.1', 'dci_5', '', 'DET:BAND 20', 4, 0.03)
    Call('dci', '100 mA', 'CONF:CURR:DC 0.1', 'dci_6', '', 'DET:BAND 20', 4, 0.055)
    Call('dci', '0.1 A', 'CONF:CURR:DC 1', 'dci_7', '', 'DET:BAND 20', 4, 0.0002)
    Call('dci', '0.5 A', 'CONF:CURR:DC 1', 'dci_8', '', 'DET:BAND 20', 4, 0.0006)
    Call('dci', '1 A', 'CONF:CURR:DC 1', 'dci_9', '', 'DET:BAND 20', 4, 0.0011)
    Call('dci', '0.3 A', 'CONF:CURR:DC 3', 'dci_10', '', 'DET:BAND 20', 4, 0.00096)
    Call('dci', '1 A', 'CONF:CURR:DC 3', 'dci_11', '', 'DET:BAND 20', 4, 0.0018)
    Call('dci', '2.5 A', 'CONF:CURR:DC 3', 'dci_12', '', 'DET:BAND 20', 4, 0.0036)
if self.vardict_boo['aci_var'].get() == 1:
    Call('aci', '0.1 A, 10 Hz', 'CONF:CURR:AC 1', 'aci_1', '', 'DET:BAND 3', 4, 0.0007)
    Call('aci', '0.1 A, 1 kHz', 'CONF:CURR:AC 1', 'aci_2', '', 'DET:BAND 20', 4, 0.0005)
    Call('aci', '0.1 A, 5 kHz', 'CONF:CURR:AC 1', 'aci_3', '', 'DET:BAND 20', 4, 0.0005)
    Call('aci', '0.5 A, 10 Hz', 'CONF:CURR:AC 1', 'aci_4', '', 'DET:BAND 3', 4, 0.0015)
    Call('aci', '0.5 A, 1 kHz', 'CONF:CURR:AC 1', 'aci_5', '', 'DET:BAND 20', 4, 0.0009)
    Call('aci', '0.5 A, 5 kHz', 'CONF:CURR:AC 1', 'aci_6', '', 'DET:BAND 20', 4, 0.0009)
    Call('aci', '1 A, 10 Hz', 'CONF:CURR:AC 1', 'aci_7', '', 'DET:BAND 3', 4, 0.0034)
    Call('aci', '1 A, 1 kHz', 'CONF:CURR:AC 1', 'aci_8', '', 'DET:BAND 20', 4, 0.0014)
    Call('aci', '1 A, 5 kHz', 'CONF:CURR:AC 1', 'aci_9', '', 'DET:BAND 20', 4, 0.0014)
    Call('aci', '0.3 A, 10 Hz', 'CONF:CURR:AC 3', 'aci_10', '', 'DET:BAND 3', 4, 0.00285)
    Call('aci', '0.3 A, 1 kHz', 'CONF:CURR:AC 3', 'aci_11', '', 'DET:BAND 20', 4, 0.00225)
    Call('aci', '0.3 A, 5 kHz', 'CONF:CURR:AC 3', 'aci_12', '', 'DET:BAND 20', 4, 0.00225)
    Call('aci', '1 A, 10 Hz', 'CONF:CURR:AC 3', 'aci_13', '', 'DET:BAND 3', 4, 0.0053)
    Call('aci', '1 A, 1 kHz', 'CONF:CURR:AC 3', 'aci_14', '', 'DET:BAND 20', 4, 0.0021)
    Call('aci', '1 A, 5 kHz', 'CONF:CURR:AC 3', 'aci_15', '', 'DET:BAND 20', 4, 0.0021)
    Call('aci', '2.5 A, 1 kHz', 'CONF:CURR:AC 3', 'aci_17', '', 'DET:BAND 20', 5, 0.00555)
    if self.b1[1] == '5522A':
        Call('aci', '2.5 A, 10 Hz', 'CONF:CURR:AC 3', 'aci_16', '', 'DET:BAND 3', 5, 0.01055)
        Call('aci', '2.5 A, 5 kHz', 'CONF:CURR:AC 3', 'aci_18', '', 'DET:BAND 20', 5, 0.00555)

Message('Калибровка завершена')
Clear_merge()
Reset()
